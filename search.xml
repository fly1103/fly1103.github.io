<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>机器学习-KNN</title>
      <link href="/2019/12/21/knn/"/>
      <url>/2019/12/21/knn/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>参考书籍《机器学习实战》,《机器学习》。<br><strong>KNN算法</strong></p><p>kNN也叫k-近邻算法是一种分类与回归算法，属于监督学习算法。工作原理是：存在一个训练样本集，其中的每一个数据都有一个对应的标签，这个标签就是它所属分类的对应关系。我们输入一个新数据后，将新数据的特征与训练集中的特征进行比较，然后算法根据其特征，提取样本中最相似(最近邻)的分类标签。就拿爱情片和动作片来说，其中接吻镜头和打斗场面就相当于其特征，爱情片和动作片就相当于分类标签。我们只选择样本数据中的前k个最相似的数据，通常k不大于20，然后根据这k个相似数据中出现的最多的分类，作为新数据的分类。</p><p>k近邻算法的一般流程<br>(1)收集数据：可以使用任何方法<br>(2)准备数据：计算距离，最好是结构化的数据格式<br>(3)分析数据：可以使用任何方法<br>(4)训练算法：此步骤不适用kNN<br>(5)测试算法：计算错误率<br>(6)使用算法：首先输入样本数据和结构化的输出结果，然后运行kNN 判定输入的数据属于哪个分类，最后应用对计算出的分类执行后续的处理。</p><p><strong>用python实现</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> operator <span class="comment">#导入numpy 和 运算符模块</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">createDataSet</span><span class="params">()</span>:</span></span><br><span class="line">    group = array([[<span class="number">1.0</span>,<span class="number">1.1</span>],[<span class="number">1.0</span>,<span class="number">1.1</span>],[<span class="number">0</span>,<span class="number">0</span>],[<span class="number">0</span>,<span class="number">0.1</span>]])</span><br><span class="line">    labels = [<span class="string">'A'</span>,<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'B'</span>]</span><br><span class="line">    <span class="keyword">return</span> group, labels</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> kNN</span><br><span class="line">group,labels = kNN.createDataSet()</span><br><span class="line">group</span><br><span class="line">out[]:array([[<span class="number">1.</span> , <span class="number">1.1</span>],</span><br><span class="line">       [<span class="number">1.</span> , <span class="number">1.1</span>],</span><br><span class="line">       [<span class="number">0.</span> , <span class="number">0.</span> ],</span><br><span class="line">       [<span class="number">0.</span> , <span class="number">0.1</span>]])</span><br><span class="line">labels</span><br><span class="line">out[]</span><br><span class="line">[<span class="string">'A'</span>, <span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'B'</span>]</span><br></pre></td></tr></table></figure></div><p>以上是一些准备工作，我们解析并加载了数据。接下来进行进一步实现</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">伪代码</span><br><span class="line">1，计算已知类别数据集中的点与当前点的距离</span><br><span class="line">2，按照距离递增次序排序</span><br><span class="line">3，选取与当前距离最小的k个点</span><br><span class="line">4，确定前k个点所在类别的出现频率</span><br><span class="line">5，返回前k个点出现频率最高的类别作为当前点的预测分类</span><br></pre></td></tr></table></figure></div><p>inX为待分类数据，dataSet为训练数据集，labels对应dataSet每一行数据的标签(类型),k表示用于选择最近邻居的数目<br>shape[0]表示最外围的数组的维数,如果是二维，shape[0]表示行数，shape[1]表示列数<br>tile(inX, (dataSetSize,1)) 创建一个numpy的array，dataSetSize行，每行数据是inX<br>-dataSet 矩阵减法 m<em>n矩阵A - m</em>n矩阵B<a href="https://www.fly1103.com/2019/08/23/python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%87%BD%E6%95%B0%E4%BD%BF%E7%94%A8/#more" target="_blank" rel="noopener">详细函数说明戳这</a></p><p>距离公式：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>=</mo><msqrt><mrow><mo stretchy="false">(</mo><mi>x</mi><msub><mi>A</mi><mn>0</mn></msub><mo>−</mo><mi>x</mi><msub><mi>B</mi><mn>0</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mi>x</mi><msub><mi>A</mi><mn>1</mn></msub><mo>−</mo><mi>x</mi><msub><mi>B</mi><mn>1</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">d = \sqrt{(xA_0-xB_0)^{2}+(xA_1-xB_1)^{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.30499999999999994em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">x</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">x</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.8950000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width="400em" height="1.28em" viewbox="0 0 400000 1296" preserveaspectratio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z M1001 80H40000v40H1012z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30499999999999994em;"><span></span></span></span></span></span></span></span></span></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">classify0</span><span class="params">(inX, dataSet, labels, k)</span>:</span> </span><br><span class="line">    dataSetsize = dataSet.shape[<span class="number">0</span>]   </span><br><span class="line">    diffMat = tile(inX, (dataSetSize,<span class="number">1</span>)) - dataSet    </span><br><span class="line">    sqDiffMat = diffMat**<span class="number">2</span></span><br><span class="line">    sqDiffMat = diffMat.sum(axis = <span class="number">1</span>) <span class="comment">#横向求和，得到一个新的矩阵</span></span><br><span class="line">    distances = sqDistances**<span class="number">0.5</span> <span class="comment">#至此完成距离计算</span></span><br><span class="line"></span><br><span class="line">    sortdDistIndicies = distance.argsort() </span><br><span class="line">    classCount = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(k):</span><br><span class="line">        voteIlabel = labels[sortdDistIndicies[i]]</span><br><span class="line">        clssCount[voteIlabel] = classCount.get(voteIlabel,<span class="number">0</span>) + <span class="number">1</span> <span class="comment">#选择距离最小的k个点</span></span><br><span class="line">    sortedClassCount = sorted(classCount.iteritems(),key = operator.itemgetter(<span class="number">1</span>),reverse = <span class="literal">True</span>)  <span class="comment">#完成排序</span></span><br><span class="line">    <span class="keyword">return</span> sortedClassCount[<span class="number">0</span>][<span class="number">0</span>]</span><br></pre></td></tr></table></figure></div><p>为了预测数据所在分类<br><code>kNN.classify0([0,0],group,labels,3)</code><br>输出B为正确结果<br>之后我又将《机器学习实战》中的示例1：<em>使用kNN改进约会网站的配对效果</em>码了一遍放在<a href="https://github.com/fly1103/machine-learning" target="_blank" rel="noopener">我的github了</a><br>当然了其中也读了一些人的博客。<br><a href="https://blog.csdn.net/c406495762/article/details/75172850" target="_blank" rel="noopener">更多详细说明看dalao博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> KNN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>观云</title>
      <link href="/2019/12/20/cloud/"/>
      <url>/2019/12/20/cloud/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>离家很远处是有一排山的，放眼望去，看不到尽头。小时候随着父母一起上田，独自一人会去抓各种昆虫玩，比如一两只蛐蛐，还有蚂蚱，至于蝴蝶却是很难抓到，当我小心翼翼地靠近它们，手还没来得及伸出去，它们便一追一赶地飞走了，只留我一人失望的坐在田边。实在无聊，便去看眼前的山，是在远处，只能看清那大概的轮廓，以至于我后来都看厌了。然而，当那山头的云缓缓飘过时，我的心头便会感到一阵惊喜。云，变化莫测，怎么看都看不厌。</p><p>儿时不懂事，对什么都会感到好奇，闲时就会抬起头，白天看飞过的鸟儿，看飘过的云朵，晚上则会看漂亮的银河，看漫天的星星。世上没有两片相同的树叶，也没有两朵相同的云。于是我便喜欢盯着云看，而且盯得很紧，不由自主得你会发现，它突然会成为一个有趣的云。<br>有时它像我家的猫阿黄，有时它又像那只可爱的小汪。真的是越看越发有趣，不经意间它又会成为另一番模样。厚重点的云大多是从山那边飘来的，它很耐看，我可以一直目送着它归去，看它变幻的经过。而那些薄薄的云很不经看，半天也看不出什么名堂。</p><p>这些都是普通的云，可爱极了。清晨，它们像一块澡巾，将太阳擦得炽热，纯洁，黄昏，它们又宛如一片薄被，轻轻得盖在夕阳身上。它们也会调皮，也会胆小，当阳光越发炽热，越发刺眼时，它们便灰溜溜得躲得远远的，不敢靠近。当那热度稍减，它们又会慢悠悠得飘过去。当然，每逢下雨天，它们气势凶猛得很，它们肆意地将天空遮盖，雷鸣是它们的怒吼，雨水是它们的武器，仿佛整个世界都将属于它们。然而，这一切都是徒劳，太阳终于还是出来了，光明冲破了层层云雾，照向大地。一位小女孩拉着妈妈的手说，雨后的感觉真好，人们也纷纷高兴地说，今年必定是个丰收年！看呐，这位有脾气而又不失可爱的朋友还会做好事。</p><p>离开了故乡，来到了大的都市，街上的行人来来往往，不曾会有人去仰头看看天空。他们随着熙熙攘攘的人潮去种种旅游景点，却忘了天空也是一处风景。现在的我，依旧喜欢看云。与以往不同的是，我开始喜欢看轻薄的云，淡淡的云。阿黄早已失踪，小汪也在不久前老去了。我有时就在想，那些云里是不是就存有它们的影子呢。那么它们是从家乡飘过来的吧，历经了奔波，所以才会变得如此的轻，如此的淡。我有点羡慕它们，它们为何就能去往世界各地呢？而我却只能苟且的活着。云是不说话的，它什么都不懂，我心里暗笑。从远方却又传来它嗝嗝的笑声，原来它什么都懂的，它将我的悲伤带向了远方，化作了阵阵清风。</p><p>我只有一个很小的心愿，我希望这些云儿可以慢一点，再慢一点，让时间长一点。等一等这万千世界忙碌的人们，让它们可以在匆忙之中驻足，去看看头顶的云，看看它们那可爱的模样。</p>]]></content>
      
      
      <categories>
          
          <category> 写作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.阴影检测与去除</title>
      <link href="/2019/12/15/lunwen1/"/>
      <url>/2019/12/15/lunwen1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://arxiv.org/pdf/1908.01323.pdf" target="_blank" rel="noopener">论文地址</a></p><p><strong><center> ARGAN: Attentive Recurrent Generative Adversarial Network for Shadow Detection and Removal</center></strong></p><p><strong>概要</strong>：提出一种检测和去除图像阴影的注意递归生成对抗网络（ARGAN）。<br><strong>介绍</strong>：阴影由照明、物体材质、空间几何位置关系等相互作用形成，检测阴影可以为视觉理解提供线索，例如场景几何描述，摄像机的位置，以及光源等等。去除阴影可以提高某些计算机视觉和计算机图形学的性能，如对象检测与跟踪，图像识别与分割。</p><a id="more"></a><p>如：</p><div align="center" width="80%">  <a href="http://p1.so.qhimgs1.com/t0117669b43634f4ef0.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="80%" data-src="http://p1.so.qhimgs1.com/t0117669b43634f4ef0.jpg" class="lazyload"></a></div><font color="#0099ff" size="2" face="黑体">图1.输入带有阴影的左图,我们目标生成一个更精确的注意力图，逐步指示检测到阴影区域(右上)，通过多个渐进步骤得到去除阴影的图(右下)</font><p><strong>以往的方法</strong><br>(1)基于先验知识的传统方法(如阴影区域的照明)<br>缺点：无法在复杂环境下得到好的效果<br>(2)深度学习方法(其有效性在很大程度上依赖于监督数据来学习鲁棒的模型)<br>缺点：当训练数据不足的情况下，会出现去除阴影时颜色失真或其他问题<br><strong>本文方法</strong><br>提出注意递归生成对抗网络(ARGAN),如上图，生成器包含多个渐进阴影检测和去除步骤，由粗到细。判别器在最后一步中去除图像进行真假分类。<br>在生成器的每一步中，阴影注意检测器用于生成注意图。然后设计一种阴影去除编码器，将之前的阴影去除图像与当前检测到的阴影注意图结合起来，得到一个负的残差，用于恢复阴影较轻或甚至无阴影的图像。<br>生成器使用逐步的方法更容易检测和去除阴影，前一步检测到的阴影和恢复的阴影图像是本步的输入。类似<code>LSTM</code>，探索出递归单元，保留有效的信息，使检测的阴影区更加准确，去除阴影的图像更加逼真。<br>使用生成器和判别器形成对抗训练，随着次数的增加， 使两个模型更完善，判别器越难区分生成的阴影去除图像和真实无阴影图像。利用生成器学习的参数，逐步生成阴影注意图和阴影去除图，得到最终结果。<br>使用<code>半监督学习</code>策略，修改原始对抗性损失覆盖标记数据和未标记数据，充分利用足够的无监督阴影图像。可以先使用生成器为输入的有阴影的图像生成一个去除阴影的图像，然后仅使用判别器区分生成的图像是否真实。这样可提高ARGAN的泛化能力和鲁棒性。<br>总结：</p><ol><li>采用对抗训练过程</li><li>包含多个渐进步骤，由粗到细(类似LSTM)</li><li>半监督学习策略</li></ol><p><strong>相关工作</strong></p><ol><li>阴影检测方法</li><li>阴影消除方法</li><li>Generative Adversarial Network(GAN)</li><li>注意机制</li></ol><div align="center" width="80%">  <a href="https://ae01.alicdn.com/kf/H502ac755e499449cab8ede42e3d4ade1N.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="80%" data-src="https://ae01.alicdn.com/kf/H502ac755e499449cab8ede42e3d4ade1N.png" class="lazyload"></a></div><font color="#0099ff" size="2" face="黑体">图2.ARGAN的框架概述包括两个部分，即生成器和判别器。生成器由N个阴影注意检测器和N个阴影图像编码器组成。每个阴影注意检测器均设计为生成阴影注意图，每个阴影去除编码器均会生成更亮或什至无阴影的图像。鉴别器由五个卷积层和一个完全连接的层组成，以将输出的无阴影图像分类为真实或伪造。</font><p><strong>方法</strong><br>在生成阶段，给定输入的阴影图像，我们通过<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>G</mi><mrow><mi>r</mi><mi>e</mi><mi>m</mi></mrow><mi>i</mi></msubsup></mrow><annotation encoding="application/x-tex">G^i _{rem}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.071664em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>迭代更新由 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">A_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>指示的检测到的阴影区域，并通过<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>G</mi><mrow><mi>r</mi><mi>e</mi><mi>t</mi></mrow><mi>i</mi></msubsup></mrow><annotation encoding="application/x-tex">G^i _{ret}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.071664em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>输出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>O</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">O_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，</p><div align="center" width="80%">  <a href="http://p0.so.qhimgs1.com/t01a545641333c2b5c6.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="80%" data-src="http://p0.so.qhimgs1.com/t01a545641333c2b5c6.jpg" class="lazyload"></a></div><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span></span></span></span>输入的阴影图像<br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>G</mi><mrow><mi>r</mi><mi>e</mi><mi>m</mi></mrow><mi>i</mi></msubsup></mrow><annotation encoding="application/x-tex">G^i _{rem}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.071664em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>阴影注意检测器(shadow attention detector)<br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>G</mi><mrow><mi>r</mi><mi>e</mi><mi>t</mi></mrow><mi>i</mi></msubsup></mrow><annotation encoding="application/x-tex">G^i _{ret}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.071664em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>阴影去除编码器(shadow removal encoder)<br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">A_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>:生成的注意图<br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>O</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">O_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>:生成更亮的阴影图(shadow-lighter)或无阴影的图(shadow-free)<br>在判别阶段，我们设计了一个鉴别器D，使用半监督策略对最终输出的无阴影图像<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>O</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">O_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>进行编码，在对抗框架下处理监督下的监督数据(地面真实无阴影图像F)和非监督数据(F缺失)<br><strong>生成网络(GAN)</strong><br>生成网络由N个逐步的步骤组成，每一步都有一个<strong>shadow attention detector</strong>和<strong>shadow removal encoder</strong></p><div align="center" width="80%">  <a href="https://ae01.alicdn.com/kf/Hf1164eb5667f45acbd5d3891c052378by.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="80%" data-src="https://ae01.alicdn.com/kf/Hf1164eb5667f45acbd5d3891c052378by.png" class="lazyload"></a></div><font color="#0099ff" size="2" face="黑体">图3.每个阴影注意力检测器由10个卷积层组成，其中64个为输出通道号，1个LSTM层和1个卷积层。请注意，这里的每个卷积层后面都有一个批处理归一化和Leaky-ReLU活动函数。步幅是1。</font><ul><li>shadow attention detector:</li></ul><p>我们结合注意机制来选择性地选择我们的网络想要观察的内容，定位输入图像的阴影，并使阴影去除编码器的注意力集中在检测到的阴影区域。如图2所示，通过长短期记忆（LSTM)的一个循环单位可以形成我们的循环注意网络，其中LSTM可以充分利用循环网络中前一步的中间输出，作为前一步，生成表示后一步阴影区域的注意图。</p><div align="center" width="80%">  <a href="http://p3.so.qhimgs1.com/t01ddbb78a9b195a5ae.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="%" data-src="http://p3.so.qhimgs1.com/t01ddbb78a9b195a5ae.jpg" class="lazyload"></a></div>如图3所示，我们的递归网络中的阴影注意力检测器被设计为十个卷积层，具有批量归一化和Leaky ReLU激活功能(Conv + BN + LRelu)以从输入图像中提取特征。输出的$A_i$是一个矩阵，每个值在0~1之间，1接近红色，0接近蓝色。通过重复迭代，使注意检测器覆盖整个阴影区域。如图4.随着步数的增加，以红色为标记的区域更加准确。<ul><li>shadow removal encoder:</li></ul><p>如图5.8个Conv+BN+LRelu从图像提取特征，8个Decove+BN+LRelu的反卷积层来生成具有特定分布的特征数据的图像。最后应用2个Conv + BN + LRelu 1个Cove和Sigmoid层来提取特征图并转化为3个通道的图。</p><div align="center" width="80%">  <a href="http://p5.so.qhimgs1.com/t010a8ae7dfd76206a7.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="80%" data-src="http://p5.so.qhimgs1.com/t010a8ae7dfd76206a7.jpg" class="lazyload"></a></div><table><tr><th width="12.29%">Layer</th><th width="12.29%">Output</th><th width="12.29%">Kernel</th><th width="12.29%">Stride</th><th width="13.55%">Layer</th><th width="12.29%">Output</th><th width="12.29%">Kernel</th><th width="12.29%">Stride</th></tr><tr><td>Conv</td><td>64</td><td>3*3</td><td>2</td><td>Deconv</td><td>512</td><td>4*4</td><td>2</td></tr><tr><td>Conv</td><td>128</td><td>3*3</td><td>2</td><td>Deconv</td><td>512</td><td>4*4</td><td>2</td></tr><tr><td>Conv</td><td>256</td><td>3*3</td><td>2</td><td>Deconv</td><td>512</td><td>4*4</td><td>2</td></tr><tr><td>Conv</td><td>512</td><td>3*3</td><td>2</td><td>Deconv</td><td>256</td><td>4*4</td><td>2</td></tr><tr><td>Conv</td><td>512</td><td>3*3</td><td>2</td><td>Deconv</td><td>128</td><td>4*4</td><td>2</td></tr><tr><td>Conv</td><td>512</td><td>3*3</td><td>2</td><td>Deconv</td><td>64</td><td>4*4</td><td>2</td></tr><tr><td>Conv</td><td>512</td><td>3*3</td><td>2</td><td>Deconv</td><td>3</td><td>4*4</td><td>2</td></tr><tr><td>Conv</td><td>512</td><td>3*3</td><td>2</td><td>Conv</td><td>3</td><td>3*3</td><td>1</td></tr><tr><td>Deconv</td><td>512</td><td>4*4</td><td>2</td><td>Conv</td><td>3</td><td>3*3</td><td>1</td></tr></table><font color="#0099ff" size="2" face="黑体">Conv:卷积层 Deconv:反卷积层 Output：当前层中输出通道的数量  Kernel:卷积核大小 Stride:卷积核移动步长</font><p><strong>判别网络</strong></p><ol><li>判别器是一个二进制分类器</li><li>半监督策略：将没有阴影的图像作为无监督与数据，然后将无监督数据输入生成器生成无阴影图像，使用判别器判别真实性。</li><li>频谱归一化<br><strong>损失函数</strong></li></ol><ul><li>The total loss：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mrow><mi>t</mi><mi>o</mi><mi>t</mi><mi>a</mi><mi>l</mi></mrow></msub><mo>=</mo><msub><mi>L</mi><mrow><mi>d</mi><mi>e</mi><mi>t</mi></mrow></msub><mo>+</mo><msub><mi>L</mi><mrow><mi>r</mi><mi>e</mi><mi>m</mi></mrow></msub><mo>+</mo><msub><mi>L</mi><mrow><mi>a</mi><mi>d</mi><mi>v</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{total} = L_{det} + L_{rem} + L_{adv}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>Shadow attention detector loss:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mrow><mi>d</mi><mi>e</mi><mi>t</mi></mrow></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><msub><mi>β</mi><mi>i</mi></msub><msub><mi>V</mi><mrow><mi>M</mi><mi>S</mi><mi>E</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>A</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>M</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L_{det} = \sum_{i=1}^N\beta_iV_{MSE}(A_i,M)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mclose">)</span></span></span></span></li><li>Shadow removal encoder loss: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mrow><mi>r</mi><mi>e</mi><mi>m</mi></mrow></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><msub><mi>L</mi><mrow><mi>m</mi><mi>s</mi><mi>e</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>O</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>F</mi><mo stretchy="false">)</mo><mo>+</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><msub><mi>L</mi><mrow><mi>p</mi><mi>e</mi><mi>r</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>O</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>F</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L_{rem} = \sum_{i=1}^NL_{mse}(O_i,F)+\sum_{i=1}^NL_{per}(O_i,F)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mrow><mi>m</mi><mi>s</mi><mi>e</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>O</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>F</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>β</mi><mi>i</mi></msub><msub><mi>V</mi><mrow><mi>M</mi><mi>S</mi><mi>E</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>O</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>F</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L_{mse}(O_i,F)=\beta_iV_{MSE}(O_i,F)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mrow><mi>p</mi><mi>e</mi><mi>r</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>O</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>F</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>V</mi><mrow><mi>M</mi><mi>S</mi><mi>E</mi></mrow></msub><mo stretchy="false">(</mo><mi>V</mi><mi>G</mi><mi>G</mi><mo stretchy="false">(</mo><msub><mi>O</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>V</mi><mi>G</mi><mi>G</mi><mo stretchy="false">(</mo><mi>F</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L_{per}(O_i,F) = V_{MSE}(VGG(O_i),VGG(F))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">G</span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">G</span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></li><li>Adversarial loss:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mrow><mi>a</mi><mi>d</mi><mi>v</mi></mrow></msub><mo>=</mo><mi>λ</mi><msub><mi>E</mi><mrow><mo stretchy="false">(</mo><mi>I</mi><mo separator="true">,</mo><mi>F</mi><mo stretchy="false">)</mo></mrow></msub><mo stretchy="false">[</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>D</mi><mo stretchy="false">(</mo><mi>G</mi><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">L_{adv} = \lambda E_{(I,F)}[\log(D(y))+\log(1-D(G(I)))]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mord mathdefault">λ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">]</span></span></span></span><br>with semi-supervised learning,it is defined as:Adversarial loss:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mrow><mi>a</mi><mi>d</mi><mi>v</mi></mrow></msub><mo>=</mo><mi>λ</mi><msub><mi>E</mi><mrow><mo stretchy="false">(</mo><mi>I</mi><mo separator="true">,</mo><mi>F</mi><mo stretchy="false">)</mo></mrow></msub><mo stretchy="false">[</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>D</mi><mo stretchy="false">(</mo><mi>G</mi><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>λ</mi><mo stretchy="false">)</mo><msub><mi>E</mi><mrow><mo stretchy="false">(</mo><mover accent="true"><mi>i</mi><mo>^</mo></mover><mo stretchy="false">)</mo></mrow></msub><mo stretchy="false">(</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>D</mi><mo stretchy="false">(</mo><mi>G</mi><mo stretchy="false">(</mo><mover accent="true"><mi>i</mi><mo>^</mo></mover><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L_{adv} = \lambda E_{(I,F)}[\log(D(y))+\log(1-D(G(I)))]+(1-\lambda)E_{(\hat{i})}(\log(1-D(G(\hat{i}))))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mord mathdefault">λ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.226272em;vertical-align:-0.476272em;"></span><span class="mord mathdefault">λ</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.398728em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92296em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-2.9285200000000002em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mtight">^</span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.476272em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.17296em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92296em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">i</span></span></span><span style="top:-3.22852em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span><br><strong>实施细节</strong><br>我们建议的ARGAN在Tensorflow上的计算机上采用Intel®Xeon®Silver 4114 CPU @ 2.20GHz 192G RAM NVIDIA GeForce GTX 1080Ti。在我们的实验中，图像的输入大小为256×256。我们将N = 3设置为λ= 0.7。最小批量大小为4。初始学习率设置为0.0002。我们使用Momentum Optimizer来优化生成器，并使用Adam Optimizer来区分。我们也可以训练100,000个时代的生成网络和判别网络。</li></ul><div align="center" width="80%">  <a href="http://p1.so.qhimgs1.com/t019dbf573ef2d89755.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="80%" data-src="http://p1.so.qhimgs1.com/t019dbf573ef2d89755.jpg" class="lazyload"></a></div><p>综合几种方法进行比较，最后一个结果为本模型的结果，效果比较好。<br><strong>实验</strong></p><p>采用4个数据集进行验证：<br>SBU dataset:有4727个阴影和阴影蒙版，没有无阴影图像。<br>UCF dataset：110个带有相应蒙版的阴影图像，没有无阴影图像。<br>SRD dataset：408对公开可用的阴影和无阴影图像，但没有地面真实笼罩。<br>ISTD dataset：包含1870个阴影图像、阴影遮罩和无阴影图像的图像三元组。<br>使用前两个数据集用去阴影检测，第三个数据集用于阴影去除，第四个数据中1330个数据用于监督训练，其余540用于评估。<br>对于阴影检测，我们使用地面真实遮罩和预测阴影蒙版之间的平衡错误率(BER)来评估阴影检测性能。对于阴影去除，我们利用恢复阴影去除结果和地面真实图像之间的实验室颜色空间中的均方根误差(RMSE)</p><ul><li>阴影检测性能比较(ARGAN+SS)</li></ul><ol><li>在所有竞争方法中，我们的ARGAN在所有三个数据集上的误比特率都最好，这有力地证明了我们提出的ARGAN能够检测出准确的阴影区域；</li><li>没有LSTM层，AGAN的性能比ARGAN差得多，间接验证了我们的阴影注意检测器中LSTM层的有效性；</li><li>通过半监督学习，ARGAN+SS进一步提高了ARGAN的性能，有力地证明了我们提出的模型的鲁棒性。</li></ol><ul><li>阴影去除的性能比较</li></ul><div align="center" width="80%">  <a href="http://p4.so.qhimgs1.com/t0129625bb507f14c13.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="80%" data-src="http://p4.so.qhimgs1.com/t0129625bb507f14c13.jpg" class="lazyload"></a></div><font color="#0099ff" size="2" face="黑体">ARGAN对于处理复杂场景中的阴影非常强大。恢复后的无阴影图像中原始阴影区域的光照恢复与周围环境一致，阴影区域的纹理细节得到较好的保留。</font><ol><li>我们提出的ARGAN在两个数据集的阴影区域和整个图像上都达到了最好的RMSE，这表明ARGAN有希望去除阴影并恢复更真实的无阴影图像；</li><li>没有LSTM层，AGAN不能像ARGAN一样从质量上恢复无阴影图像。这可以解释为LSTM层影响检测到的阴影注意图，从而影响最终恢复的无阴影图像的质量；</li><li>无论是在阴影区域、非阴影区域，甚至是整个图像中，ARGAN+SS都不断提高ARGAN的性能。再次，这清楚地证明了我们提出的ARGAN能够在半监督学习中利用足够的无监督阴影图像来提高生成器的质量，并保证阴影检测和无阴影图像恢复的性能。</li></ol><table><tr><th width="24%">Name</th><th width="18.73%">Year</th><th width="20.78%">SUB</th><th width="19.32%">UCF</th><th width="17.27%">ISTD</th></tr><tr><td>Guo</td><td>2011</td><td>25.03</td><td>28.32</td><td>27.16</td></tr><tr><td>Zhang</td><td>2015</td><td>7.13</td><td>9.21</td><td>8.56</td></tr><tr><td>DSC</td><td>2018</td><td>5.31</td><td>8.73</td><td>2.40 </td></tr><tr><td>ST-CGAN</td><td>2018</td><td>13.56</td><td>17.69</td><td>3.84</td></tr><tr><td>A+D Net</td><td>2018</td><td>7.67</td><td>11.05</td><td>2.97</td></tr><tr><td>BDRAR</td><td>2018</td><td>6.61</td><td>9.45</td><td>2.20 </td></tr><tr><td>AGAN</td><td>2019</td><td>7.24</td><td>8.67</td><td>4.23</td></tr><tr><td>ARGAN</td><td>2019</td><td>3.09</td><td>3.76</td><td>2.01</td></tr><tr><td>ARGAN+SS</td><td>2019</td><td>2.56</td><td>3.03</td><td>1.75</td></tr></table><p><strong>讨论</strong><br>LSTM层对于无阴影图像恢复和半监督策略非常重要，而ARGAN+SS对于处理复杂场景的阴影图像非常有效<br><strong>结论</strong><br>本文提出了一种用于阴影检测和去除的鲁棒注意递归生成对抗网络。生成阴影注意图和恢复阴影去除图像的生成器包括从粗到细的多个渐进步骤。我们的模型能够处理复杂场景的阴影，并非常灵活地结合足够的无监督阴影图像来训练一个强大的模型。未来的工作包括将我们的方法扩展到视频阴影的检测和去除。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARGAN </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
